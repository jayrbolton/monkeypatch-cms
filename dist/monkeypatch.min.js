window._mp={init:function(e,o,t,n){void 0===e&&(e=prompt("Enter the URL of your github repository (example: 'https://github.com/userOrOrg/repoName')"));const a=new URL(e);if("https://github.com"!==a.origin)return void console.error("[monkeypatch] "+e+" does not have protocol and domain of 'https://github.com'");const r=a.pathname.split("/");if(3!==r.length)return void console.error("[monkeypatch] URL path in '"+a.pathname+"' should match '/<user_or_org>/<repo_name>'");const c=r[1],l=r[2];void 0===o&&""===(o=prompt("Enter the branch name of your repo (leave blank for 'main')"))&&(o="main"),void 0===t&&(""===(t=prompt("Enter the HTML file path for this webpage in your repo (leave blank for 'index.html')"))&&(t="index.html"),"/"===t[0]&&(t=t.slice(1))),void 0!==n||""!==(n=prompt("Enter a Github Personal Access Token that can write to branch name of your repo (leave blank for 'main')"))?(localStorage.setItem("userOrg",c),localStorage.setItem("repoName",l),localStorage.setItem("branchName",o),localStorage.setItem("filePath",t),localStorage.setItem("token",n),window._mp.contents=document.documentElement.innerHTML,window._mp.connect()):console.error("[monkeypatch] No token entered; cannot continue.")},clear:function(){window._mp.observer.disconnect(),window._mp.observer=null,localStorage.removeItem("userOrg"),localStorage.removeItem("repoName"),localStorage.removeItem("branchName"),localStorage.removeItem("filePath"),localStorage.removeItem("token"),console.log("[monkeypatch] All configuration data cleared.")},connect:function(){console.log("[monkeypatch] Listening to page changes"),window._mp.observer=new MutationObserver(function(){const e=document.documentElement.innerHTML;_mp.contents!==e&&(null!==_mp.contents?(_mp.lastChange=Number(new Date),_mp.contents=e):_mp.contents=e)}),window._mp.observer.observe(document.documentElement,{attributes:!0,childList:!0,subtree:!0,characterData:!0}),setInterval(()=>{_mp.lastChange>_mp.lastSave&&_mp.sync()},_mp.saveInterval)},sync:function(e){const o=localStorage.getItem("userOrg"),t=localStorage.getItem("repoName"),n=localStorage.getItem("filePath"),a="https://api.github.com/repos/"+o+"/"+t;window.fetch(a+"/contents/"+n).then(e=>e.json()).then(e=>{if("file"!==e.type)throw new Error("File located at '"+o+"/"+t+"/"+n+"' is not a file");const r=e.sha,c=JSON.stringify({message:"monkeypatch "+n,content:window.btoa(_mp.contents),sha:r}),l={method:"PUT",headers:{Authorization:"Bearer "+localStorage.getItem("token"),"Content-Type":"application/json",Accept:"application/vnd.github.v3+json"},body:c};window.fetch(a+"/contents/"+n,l).then(e=>{if(!e.ok){if(409===e.status)return;throw new Error("Error saving to Github: "+e.status+" "+e.statusText)}_mp.lastSave=Number(new Date),_mp.retryInterval=5e3,console.log("[monkeypatch] Saved changes at "+new Date)}).catch(e=>{console.error("[monkeypatch] "+e)})}).catch(e=>{console.error("[monkeypatch] "+e)})},observer:null,contents:null,lastSave:0,lastChange:0,saveInterval:3e3},localStorage.userOrg&&localStorage.repoName&&localStorage.branchName&&localStorage.filePath&&localStorage.token?(console.log("[monkeypatch] Found existing config data. Run `_mp.init()` to reset and `_mp.clear()` to remove config."),window._mp.connect()):(console.log("[monkeypatch] No config found. Run `_mp.init()` to initialize configuration data."),console.log("[monkeypatch] See https://github.com/jayrbolton/monkeypatch-cms for help."));
